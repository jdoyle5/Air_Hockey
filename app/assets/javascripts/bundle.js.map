{"version":3,"sources":["webpack:///webpack/bootstrap 5b2dced01353c537ac9a","webpack:///./lib/air_hockey.js","webpack:///./lib/environment.js","webpack:///./lib/puck_physics.js","webpack:///./lib/striker_physics.js"],"names":["ENV","document","addEventListener","setEnv","renderer","scene","camera","pointLight","spotLight","puck","strikerOne","strikerTwo","strikerTopRadius","strikerBotRadius","strikerTopHeight","strikerBotHeight","strikerDepth","strikerQuality","strikerTwoDirX","strikerTwoDirY","strikerTwoSpeed","strikerOneDirX","strikerOneDirY","strikerOneSpeed","difficulty","gameStats","scorePlayer1","scorePlayer2","maxScore","fieldWidth","fieldHeight","puckStats","puckDirX","puckDirY","strikerStats","getElementById","innerHTML","setScene","draw","WIDTH","HEIGHT","VIEW_ANGLE","ASPECT","NEAR","FAR","container","THREE","WebGLRenderer","PerspectiveCamera","Scene","add","position","z","setSize","appendChild","domElement","strikerOneMaterial","MeshLambertMaterial","color","strikerTwoMaterial","planeMaterial","tableMaterial","groundMaterial","goalMaterial","puckMaterial","tableWidth","tableHeight","tableQuality","plane","Mesh","PlaneGeometry","receiveShadow","table","CubeGeometry","puckRadius","height","segments","goalOne","x","goalTwo","CylinderGeometry","applyMatrix","Matrix4","makeRotationX","Math","degToRad","y","castShadow","topCylinder","strikerOneTop","strikerOneMerge","updateMatrix","merge","geometry","matrix","strikerTwoTop","strikerTwoMerge","PointLight","intensity","distance","SpotLight","set","shadowMap","enabled","render","requestAnimationFrame","rotation","PI","puckPhysics","strikerRadius","puckSpeedLev","bottomEdge","topEdge","leftEdge","rightEdge","resetPuck","gameWonCheck","distBetwLeft","distBetwRight","distBetwBott","distBetwTop","strikers","rotate","angle","cos","sin","i","length","striker","strVelX","strVelY","puckVelX","puckVelY","velXDiff","velYDiff","distX","distY","distTotal","sqrt","radiusTotal","m1","m2","distDiff","atan2","u1","u2","v1","v2","vFinal1","vFinal2","player","puckSpeed","strikerPhysics","abs","Key","isDown","L","R","F","B"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACD;AACD;;AAEA;AACA,SAASkF,SAAT,CAAmBmC,MAAnB,EAA2B7I,IAA3B,EAAiCsB,SAAjC,EAA4C;AAC1CtB,OAAK0C,QAAL,CAAc2B,CAAd,GAAkB,CAAlB;AACArE,OAAK0C,QAAL,CAAcmC,CAAd,GAAkB,CAAlB;;AAEA,MAAIgE,WAAW,CAAf,EAAkB;AAChBvH,cAAUC,QAAV,GAAqB,CAAC,CAAtB;AACD,GAFD,MAEO;AACLD,cAAUC,QAAV,GAAqB,CAArB;AACD;;AAEDD,YAAUE,QAAV,GAAqB,CAArB;AACD;AACD;;AAEA;AACA,SAASmF,YAAT,CAAsB1F,YAAtB,EAAoCC,YAApC,EAAkDC,QAAlD,EAA4DG,SAA5D,EAAuE;AACrE,MAAIL,gBAAgBE,QAApB,EAA8B;AAC5BG,cAAUwH,SAAV,GAAsB,CAAtB;AACAtJ,aAASkC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmD,aAAnD;AACAnC,aAASkC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,uBAA9C;AACD,GAJD,MAIO,IAAIT,gBAAgBC,QAApB,EAA8B;AACnCG,cAAUwH,SAAV,GAAsB,CAAtB;AACAtJ,aAASkC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmD,aAAnD;AACAnC,aAASkC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,uBAA9C;AACD;AACF;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAaA,K;;;;;;;;;;;;QCtdgBoH,c,GAAAA,c;;;AAFhB,IAAIhI,aAAa,EAAjB;;AAEO,SAASgI,cAAT,CAAwB/I,IAAxB,EAA8BC,UAA9B,EAA0CC,UAA1C,EAAsDc,SAAtD,EAAiES,YAAjE,EAA+E;;AAEpFA,eAAaf,cAAb,GAA8B,CAACV,KAAK0C,QAAL,CAAcmC,CAAd,GAAkB3E,WAAWwC,QAAX,CAAoBmC,CAAvC,IAA4C9D,UAA1E;;AAEA,MAAI4D,KAAKqE,GAAL,CAASvH,aAAaf,cAAtB,KAAyCe,aAAad,eAA1D,EAA2E;AACzET,eAAWwC,QAAX,CAAoBmC,CAApB,IAAyBpD,aAAaf,cAAtC;AACD,GAFD,MAEO,IAAIe,aAAaf,cAAb,GAA8Be,aAAad,eAA/C,EAAgE;AACrET,eAAWwC,QAAX,CAAoBmC,CAApB,IAAyBpD,aAAad,eAAtC;AACD,GAFM,MAEA,IAAIc,aAAaf,cAAb,GAA8B,CAACe,aAAad,eAAhD,EAAiE;AACtET,eAAWwC,QAAX,CAAoBmC,CAApB,IAAyBpD,aAAad,eAAtC;AACD;;AAED,MAAIsI,IAAIC,MAAJ,CAAWD,IAAIE,CAAf,CAAJ,EAAuB;AACrB,QAAIlJ,WAAWyC,QAAX,CAAoBmC,CAApB,GAAwB7D,UAAUK,WAAV,GAAwB,IAApD,EAA0D;AACxDI,mBAAaZ,cAAb,GAA8BY,aAAaX,eAA3C;AACD,KAFD,MAEO;AACLW,mBAAaZ,cAAb,GAA8B,CAA9B;AACD;AACF,GAND,MAMO,IAAIoI,IAAIC,MAAJ,CAAWD,IAAIG,CAAf,CAAJ,EAAuB;AAC5B,QAAInJ,WAAWyC,QAAX,CAAoBmC,CAApB,GAAwB,CAAC7D,UAAUK,WAAX,GAAwB,IAApD,EAA0D;AACxDI,mBAAaZ,cAAb,GAA8B,CAACY,aAAaX,eAA5C;AACD,KAFD,MAEO;AACLW,mBAAaZ,cAAb,GAA8B,CAA9B;AACD;AACF,GANM,MAMA;AACLY,iBAAaZ,cAAb,GAA8B,CAA9B;AACD;;AAGD,MAAIoI,IAAIC,MAAJ,CAAWD,IAAII,CAAf,CAAJ,EAAuB;AACrB,QAAIpJ,WAAWyC,QAAX,CAAoB2B,CAApB,GAAwB,CAAC,EAA7B,EAAiC;AAC/B5C,mBAAab,cAAb,GAA8Ba,aAAaX,eAA3C;AACD,KAFD,MAEO;AACLW,mBAAab,cAAb,GAA8B,CAA9B;AACD;AACF,GAND,MAMO,IAAIqI,IAAIC,MAAJ,CAAWD,IAAIK,CAAf,CAAJ,EAAuB;AAC5B,QAAIrJ,WAAWyC,QAAX,CAAoB2B,CAApB,GAAwB,CAAC,GAA7B,EAAkC;AAChC5C,mBAAab,cAAb,GAA8B,CAACa,aAAaX,eAA5C;AACD,KAFD,MAEO;AACLW,mBAAab,cAAb,GAA8B,CAA9B;AACD;AACF,GANM,MAMA;AACLa,iBAAab,cAAb,GAA8B,CAA9B;AACD;;AAEDX,aAAWyC,QAAX,CAAoBmC,CAApB,IAAyBpD,aAAaZ,cAAtC;AACAZ,aAAWyC,QAAX,CAAoB2B,CAApB,IAAyB5C,aAAab,cAAtC;AAEC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5b2dced01353c537ac9a","\nimport * as ENV from './environment';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  ENV.setEnv();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/air_hockey.js","\nimport { puckPhysics } from './puck_physics';\nimport { strikerPhysics } from './striker_physics';\n\n\n\nvar renderer, scene, camera, pointLight, spotLight;\nvar puck, strikerOne, strikerTwo;\nvar strikerTopRadius, strikerBotRadius, strikerTopHeight, strikerBotHeight, strikerDepth, strikerQuality;\nlet strikerTwoDirX = 0, strikerTwoDirY = 0, strikerTwoSpeed = 3;\nlet strikerOneDirX = 0, strikerOneDirY = 0, strikerOneSpeed = 3;\nlet difficulty = 0.2;\n\nconst gameStats = {\n  scorePlayer1: 0,\n  scorePlayer2: 0,\n  maxScore: 5,\n  fieldWidth: 630,\n  fieldHeight: 370\n};\n\nconst puckStats = {\n  puckDirX: 2,\n  puckDirY: 2,\n  // puckSpeed: 2\n};\n\nconst strikerStats = {\n  strikerOneDirX: 0,\n  strikerOneDirY: 0,\n  strikerTwoDirX: 0,\n  strikerTwoDirY: 0,\n  strikerOneSpeed: 5,\n  strikerTwoSpeed: 5\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\nexport function setEnv() {\n  document.getElementById(\"winner\").innerHTML =\n    \"First player to \" + gameStats.maxScore + \" wins!\";\n\n  gameStats.scorePlayer1 = 0;\n  gameStats.scorePlayer2 = 0;\n\n  setScene();\n  draw();\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\nfunction setScene() {\n\n  const WIDTH = 800, HEIGHT = 500;\n  const VIEW_ANGLE = 50,\n    ASPECT = WIDTH / HEIGHT,\n    NEAR = 0.1,\n    FAR = 10000;\n\n  var container = document.getElementById('game-cont');\n  renderer = new THREE.WebGLRenderer();\n  camera = new THREE.PerspectiveCamera(VIEW_ANGLE,\n    ASPECT, NEAR, FAR);\n  scene = new THREE.Scene();\n  scene.add(camera);\n  camera.position.z = 220;\n  renderer.setSize(WIDTH, HEIGHT);\n  container.appendChild(renderer.domElement);\n\n  var strikerOneMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0x14cad4\n    });\n\n  var strikerTwoMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0x14cad4\n    });\n\n  var planeMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0x7a7a7a\n    });\n\n  var tableMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0xff0000\n    });\n\n  var groundMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0xffd700\n    });\n\n  var goalMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0xD433FF\n    });\n\n  var puckMaterial =\n    new THREE.MeshLambertMaterial({\n      color: 0xD43001\n    });\n\n\n\n  const tableWidth = 700,\n    tableHeight = 400,\n    tableQuality = 10;\n\n////////////////////////////////////\n  const plane = new THREE.Mesh(\n\t  new THREE.PlaneGeometry(\n\t\ttableWidth * 0.95,\n\t\ttableHeight,\n\t\ttableQuality,\n\t\ttableQuality),\n\t  planeMaterial\n  );\n\n  scene.add(plane);\n\tplane.receiveShadow = true;\n////////////////////////////////////\n\n////////////////////////////////////\n  var table = new THREE.Mesh(\n    new THREE.CubeGeometry(\n    tableWidth * 1.05,\n    tableHeight * 1.03,\n    100,\n    tableQuality,\n    tableQuality,\n    1),\n    tableMaterial\n  );\n\n  table.position.z = -51;\n  scene.add(table);\n  table.receiveShadow = true;\n////////////////////////////////////\n\n  var puckRadius = 15,\n  height = 3,\n  segments = 20;\n\n////////////////////////////////////\n  var goalOne = new THREE.Mesh(\n    new THREE.CubeGeometry (\n      35,\n      100,\n      10,\n      1,\n      1,\n      1),\n      goalMaterial\n  );\n\n  scene.add(goalOne);\n  goalOne.position.x = gameStats.fieldWidth/2 + 32;\n  goalOne.position.z = 10;\n////////////////////////////////////\n\n////////////////////////////////////\n  var goalTwo = new THREE.Mesh(\n    new THREE.CubeGeometry (\n      35,\n      100,\n      10,\n      1,\n      1,\n      1),\n      goalMaterial\n  );\n\n  scene.add(goalTwo);\n  goalTwo.position.x = -gameStats.fieldWidth/2 - 32;\n  goalTwo.position.z = 10;\n////////////////////////////////////\n\n////////////////////////////////////\n  puck = new THREE.Mesh(\n    new THREE.CylinderGeometry(\n    puckRadius,\n    puckRadius,\n    height,\n    segments),\n    puckMaterial\n  );\n\n  puck.applyMatrix( new THREE.Matrix4().makeRotationX( THREE.Math.degToRad( 90 ) ) );\n  scene.add(puck);\n  ////////////////////////////////////\n\n  puck.position.x = 0;\n\tpuck.position.y = 0;\n  puck.position.z = 3;\n  puck.receiveShadow = true;\n  puck.castShadow = true;\n\n  strikerBotRadius = 25;\n  strikerTopRadius = 8;\n  strikerTopHeight = 50;\n  strikerBotHeight = 10;\n  strikerDepth = 10;\n\n////////////////////////////////////////////////////////////////////////\n  var topCylinder = new THREE.CylinderGeometry(strikerBotRadius, strikerBotRadius, strikerBotHeight, 16);\n  var strikerOneTop = new THREE.Mesh(topCylinder, strikerOneMaterial);\n\n  var strikerOneMerge = new THREE.CylinderGeometry(strikerTopRadius, strikerTopRadius, strikerTopHeight, 16);\n  strikerOneTop.updateMatrix();\n  strikerOneMerge.merge(strikerOneTop.geometry, strikerOneTop.matrix);\n\n  strikerOne = new THREE.Mesh(strikerOneMerge, strikerOneMaterial);\n  strikerOne.applyMatrix( new THREE.Matrix4().makeRotationX( THREE.Math.degToRad( 90 ) ) );\n\n  scene.add(strikerOne);\n  strikerOne.receiveShadow = true;\n  strikerOne.castShadow = true;\n////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////\n  var strikerTwoTop = new THREE.Mesh(topCylinder, strikerTwoMaterial);\n\n  var strikerTwoMerge = new THREE.CylinderGeometry(8, 8, 50, 16);\n  strikerTwoTop.updateMatrix();\n  strikerTwoMerge.merge(strikerTwoTop.geometry, strikerTwoTop.matrix);\n\n  strikerTwo = new THREE.Mesh(strikerTwoMerge, strikerTwoMaterial);\n  strikerTwo.applyMatrix( new THREE.Matrix4().makeRotationX( THREE.Math.degToRad( 90 ) ) );\n\n  scene.add(strikerTwo);\n  strikerTwo.receiveShadow = true;\n  strikerTwo.castShadow = true;\n////////////////////////////////////////////////////////////////////////\n\n  strikerOne.position.x = -gameStats.fieldWidth/2 + strikerBotRadius - 15;\n  strikerTwo.position.x = gameStats.fieldWidth/2 - strikerBotRadius + 15;\n  strikerOne.position.z = 3;\n  strikerTwo.position.z = 3;\n\n////////////////////////////////////\n  pointLight = new THREE.PointLight(0xF8D898);\n    pointLight.position.x = -1000;\n    pointLight.position.y = 0;\n    pointLight.position.z = 1000;\n    pointLight.intensity = 2.9;\n    pointLight.distance = 10000;\n    scene.add(pointLight\n  );\n////////////////////////////////////\n\n////////////////////////////////////\n  spotLight = new THREE.SpotLight(0xF8D898);\n  spotLight.position.set(0, 0, 460);\n  spotLight.intensity = 1.5;\n  spotLight.castShadow = true;\n  scene.add(spotLight);\n  renderer.shadowMap.enabled = true;\n////////////////////////////////////\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\nfunction draw() {\n\trenderer.render(scene, camera);\n\trequestAnimationFrame(draw);\n\n  // camera.position.x = 0;\n  // camera.position.z = 600;\n  camera.position.x = strikerOne.position.x - 350;\n  camera.position.z = strikerOne.position.z + 280;\n  camera.rotation.z = -90 * Math.PI/180;\n  camera.rotation.y = -60 * Math.PI/180;\n  spotLight.position.x = puck.position.x * 2;\n\tspotLight.position.y = puck.position.y * 2;\n\n\t// camera.position.y += (strikerOne.position.y - camera.position.y) * 0.05;\n\n  strikerPhysics(puck, strikerOne, strikerTwo, gameStats, strikerStats);\n  puckPhysics(puck, gameStats, strikerOne, strikerTwo, puckStats, strikerStats);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n////////\n\n\n\n// WEBPACK FOOTER //\n// ./lib/environment.js","\n\nvar puckRadius = 15;\nvar strikerRadius = 25;\nvar puckSpeedLev = 0.3;\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nexport function puckPhysics(puck, gameStats, strikerOne, strikerTwo, puckStats, strikerStats) {\n\n  var bottomEdge = -gameStats.fieldHeight/2;\n  var topEdge = gameStats.fieldHeight/2;\n  var leftEdge = -gameStats.fieldWidth / 2;\n  var rightEdge = gameStats.fieldWidth / 2;\n\n\n  if ((puck.position.x <= -gameStats.fieldWidth / 2)\n       && (puck.position.y > -50 && puck.position.y < 50)) {\n    gameStats.scorePlayer2++;\n    document.getElementById(\"score-board\").innerHTML = `${gameStats.scorePlayer1} - ${gameStats.scorePlayer2}`;\n    resetPuck(2, puck, puckStats);\n    gameWonCheck(gameStats.scorePlayer1, gameStats.scorePlayer2, gameStats.maxScore, puckStats);\n  } else if (puck.position.x <= -gameStats.fieldWidth / 2) {\n    let distBetwLeft = puck.position.x - leftEdge;\n    puck.position.x += -distBetwLeft;\n    puckStats.puckDirX = -puckStats.puckDirX;\n  }\n\n  if ((puck.position.x >= gameStats.fieldWidth / 2)\n      && (puck.position.y > -50 && puck.position.y < 50)) {\n    gameStats.scorePlayer1++;\n    document.getElementById(\"score-board\").innerHTML = `${gameStats.scorePlayer1} - ${gameStats.scorePlayer2}`;\n    resetPuck(1, puck, puckStats);\n    gameWonCheck(gameStats.scorePlayer1, gameStats.scorePlayer2, gameStats.maxScore, puckStats);\n  } else if (puck.position.x >= gameStats.fieldWidth / 2) {\n    let distBetwRight = puck.position.x - rightEdge;\n    puck.position.x += -distBetwRight;\n    debugger;\n    puckStats.puckDirX = -puckStats.puckDirX;\n  }\n\n  if (puckStats.puckDirY > 2) {\n    puckStats.puckDirY -= .05;\n  }\n\n  if (puckStats.puckDirY < -2) {\n    puckStats.puckDirY += .05;\n  }\n\n  if (puckStats.puckDirX < 2 && puckStats.puckDirX > 0) {\n    puckStats.puckDirX += .05;\n  }\n\n  if (puckStats.puckDirX > -2 && puckStats.puckDirX < 0) {\n    puckStats.puckDirX -= .05;\n  }\n\n  if (puck.position.y <= bottomEdge){\n    let distBetwBott = puck.position.y - bottomEdge;\n    puck.position.y += -distBetwBott;\n\t\tpuckStats.puckDirY = -puckStats.puckDirY;\n\t}\n\n\tif (puck.position.y >= topEdge){\n    let distBetwTop = puck.position.y - topEdge;\n    puck.position.y += -distBetwTop;\n\t\tpuckStats.puckDirY = -puckStats.puckDirY;\n\t}\n\n\n  //////////////////////////////////////////////////////////////\n  ////////////////////// STRIKER BOUNCE ////////////////////////\n  //////////////////////////////////////////////////////////////\n  // if (puck.position.x <= strikerOne.position.x + 25\n  // &&  puck.position.x >= strikerOne.position.x)\n  // {\n  //   // console.log(puck.position);\n  //   // console.log(strikerOne.position);\n  //   // debugger;\n  //   if (puck.position.y >= strikerOne.position.y - 25\n  //   &&  puck.position.y <= strikerOne.position.y + 25)\n  //   {\n  //     if (puckStats.puckDirX < 0)\n  //     {\n  //       puckStats.puckDirX = -puckStats.puckDirX + (strikerStats.strikerOneDirX * 0.5);\n  //       puckStats.puckDirY -= strikerStats.strikerOneDirY * 0.5;\n  //     }\n  //   }\n  // }\n  //\n  // if (puck.position.x >= strikerTwo.position.x - 35\n  // &&  puck.position.x <= strikerTwo.position.x)\n  // {\n  //   if (puck.position.y <= strikerTwo.position.y + 25\n  //   &&  puck.position.y >= strikerTwo.position.y - 25)\n  //   {\n  //     if (puckStats.puckDirX > 0)\n  //     {\n  //       puckStats.puckDirX = -puckStats.puckDirX - (strikerStats.strikerOneDirX * 0.5);\n  //       puckStats.puckDirY -= strikerStats.strikerTwoDirY * 0.5;\n  //     }\n  //   }\n  // }\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n\n\n\n\n\n  //////////////////////////////////////////////////////////////\n  ////////////////////// STRIKER BOUNCE ////////////////////////\n  ///////////////////// USING COMBO FORM ////////////////////////\n  const strikers = [strikerOne, strikerTwo];\n\n  // function rotate(x, y, sin, cos, reverse) {\n\t// \treturn {\n\t// \t\t\tx: (reverse) ? (x * cos + y * sin) : (x * cos - y * sin),\n\t// \t\t\ty: (reverse) ? (y * cos - x * sin) : (y * cos + x * sin)\n\t// \t};\n  // }\n  function rotate(x, y, angle) {\n\t\treturn {\n\t\t\t\tx: (x * Math.cos(angle) - y * Math.sin(angle)),\n\t\t\t\ty: (x * Math.sin(angle) + y * Math.cos(angle))\n\t\t};\n  }\n\n  for (var i= 0; i < strikers.length; i++) {\n    let striker = strikers[i];\n    var strVelX;\n    var strVelY;\n\n    if (i === 0) {\n      strVelX = strikerStats.strikerOneDirX;\n      strVelY = strikerStats.strikerOneDirY;\n    } else {\n      strVelX = strikerStats.strikerTwoDirX;\n      strVelY = strikerStats.strikerTwoDirY;\n    }\n\n    var puckVelX = puckStats.puckDirX,\n      puckVelY = puckStats.puckDirY;\n\n    let velXDiff = strVelX - puckVelX,\n      velYDiff = strVelY - puckVelY;\n\n    let distX = puck.position.x - striker.position.x,\n      distY = puck.position.y - striker.position.y,\n      distTotal = Math.sqrt((distX * distX) + (distY * distY)),\n      radiusTotal = puckRadius + strikerRadius;\n\n    let m1 = 1,\n      m2 = 2;\n\n    if (distTotal < radiusTotal) {\n      let distDiff = radiusTotal - distTotal;\n\n      // if (velXDiff * distX - velYDiff * distY >= 0) {\n        // debugger;\n\n        var angle = -Math.atan2(distY, distX);\n        // sin = Math.sin(angle),\n        // cos = Math.cos(angle);\n\n        // velocity before equation\n        const u1 = rotate(puckVelX, puckVelY, angle);\n        const u2 = rotate(strVelX, strVelY, angle);\n\n        // velocity after 1d collision equation\n        const v1 = {\n          x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2),\n          y: u1.y\n        };\n        const v2 = {\n          x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2),\n          y: u2.y\n        };\n\n        // final velocity after rotating axis back to original location\n        const vFinal1 = rotate(v1.x, v1.y, -angle);\n        const vFinal2 = rotate(v2.x, v2.y, -angle);\n\n        // swap particle velocities for realistic bounce effect\n        puckStats.puckDirX = vFinal1.x;\n        puckStats.puckDirY = vFinal1.y;\n\n        // strVelX = vFinal2.x;\n        // strVelY = vFinal2.y;\n\n\n\n        puck.position.x += puckStats.puckDirX;\n        puck.position.y += puckStats.puckDirY;\n\n\n\n\n///////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////\n        // var posStr = {\n        //   x: 0,\n        //   y: 0\n        // },\n        //\n        // posPuck = rotate(distX, distY, sin, cos),\n        // velPuck = rotate(puckStats.puckDirX, puckStats.puckDirY, sin, cos),\n        // velStr = rotate(strVelX, strVelY, sin, cos),\n        // totalVelX = velStr.x - velPuck.x;\n        //\n        // velStr.x = ((strikerRadius - puckRadius) * velStr.x + 2 * puckRadius * velPuck.x) /\n        // (strikerRadius + puckRadius);\n        // velPuck.x = totalVelX + velStr.x;\n        //\n        // //update position so the objects don't stick together\n        // var absV = Math.abs(velStr.x) + Math.abs(velPuck.x),\n        // overlap = (strikerRadius + puckRadius) - Math.abs(posStr.x - posPuck.x);\n        //\n        // posStr.x += velStr.x / absV * overlap;\n        // posPuck.x += (velPuck.x / absV * overlap);\n        //\n        // // rotate positions back\n        // var posPuckF = rotate(posPuck.x, posPuck.y, sin, cos),\n        // posStrF = rotate(posStr.x, posStr.y, sin, cos);\n\n        // set the new positions\n        // puck.position.x = striker.position.x + posPuckF.x;\n        // puck.position.y = striker.position.y + posPuckF.y;\n        // striker.position.x = striker.position.x + posStr.x;\n        // striker.position.y = striker.position.y + posStr.y;\n\n        // rotate velocities back\n        // var velPuckF = rotate(velPuck.x, velPuck.y, sin, cos),\n        // velStrF = rotate(velStr.x, velStr.y, sin, cos);\n        //\n        // strVelX = velStrF.x;\n        // strVelY = velStrF.y;\n        //\n        // puckStats.puckDirX = velPuckF.x;\n        // puckStats.puckDirY = velPuckF.y;\n      }\n\n    {\n      // puck.position.x += puckStats.puckDirX * puckStats.puckSpeed;\n      // puck.position.y += puckStats.puckDirY * puckStats.puckSpeed;\n      puck.position.x += puckStats.puckDirX;\n      puck.position.y += puckStats.puckDirY;\n    }\n  }\n\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n\n\n\n\n\n  //////////////////////////////////////////////////////////////\n  ////////////////////// STRIKER BOUNCE ////////////////////////\n  ///////////////////// USING DIST FORM ////////////////////////\n  // const dist = function(pos1x, pos2x, pos1y, pos2y) {\n  //   return Math.sqrt(\n  //     Math.pow(pos1x - pos2x, 2) + Math.pow(pos1y - pos2y, 2)\n  //   );\n  // };\n  //\n  // let distPuckStrOne = dist(strikerOne.position.x, puck.position.x,\n  //   strikerOne.position.y, puck.position.y);\n  //\n  // let distPuckStrTwo = dist(strikerTwo.position.x, puck.position.x,\n  //   strikerTwo.position.y, puck.position.y);\n  //\n  //\n  //\n  // if (distPuckStrOne <= (strikerBotRadius + puckRadius)) {\n  //   // If the striker's speed is greater than that of the puck's, we\n  //   // want to move the puck out from under the striker so it doesn't\n  //   // get stuck.\n  //   if (puckStats.puckDirX < 0) {\n  //     if (Math.abs(strikerStats.strikerOneDirX) > Math.abs(puckStats.puckDirX)) {\n  //       // while (distPuckStrOne < (strikerBotRadius + puckRadius)) {\n  //         puck.position.x += ((strikerBotRadius + puckRadius * 1.4) - distPuckStrOne);\n  //       // }\n  //     }\n  //   } else if (puckStats.puckDirX > 0) {\n  //     if (Math.abs(strikerStats.strikerOneDirX) > Math.abs(puckStats.puckDirX)) {\n  //       // while (distPuckStrOne < (strikerBotRadius + puckRadius)) {\n  //         puck.position.x -= ((strikerBotRadius + puckRadius * 1.4) - distPuckStrOne);\n  //       // }\n  //     }\n  //   }\n  //\n  //   if (puckStats.puckDirY < 0) {\n  //     if (Math.abs(strikerStats.strikerOneDirY) > Math.abs(puckStats.puckDirY)) {\n  //       // while (distPuckStrOne < (strikerBotRadius + puckRadius)) {\n  //         puck.position.y += ((strikerBotRadius + puckRadius * 1.4) - distPuckStrOne);\n  //       // }\n  //     }\n  //   } else if (puckStats.puckDirY > 0) {\n  //     if (Math.abs(strikerStats.strikerOneDirY) > Math.abs(puckStats.puckDirY)) {\n  //       // while (distPuckStrOne < (strikerBotRadius + puckRadius)) {\n  //         puck.position.y -= ((strikerBotRadius + puckRadius * 1.4) - distPuckStrOne);\n  //       // }\n  //     }\n  //   }\n  //\n  //   puckStats.puckDirX = -puckStats.puckDirX + (strikerStats.strikerOneDirX * puckSpeedLev);\n  //   puckStats.puckDirY = -puckStats.puckDirY + (strikerStats.strikerOneDirY * puckSpeedLev);\n  // }\n  //\n  // if (distPuckStrTwo <= (strikerBotRadius + puckRadius)) {\n  //\n  //   // If the striker's speed is greater than that of the puck's, we\n  //   // want to move the puck out from under the striker so it doesn't\n  //   // get stuck.\n  //   if (puckStats.puckDirX < 0) {\n  //     if (Math.abs(strikerStats.strikerTwoDirX) > Math.abs(puckStats.puckDirX)) {\n  //       // while (distPuckStrTwo < (strikerBotRadius + puckRadius)) {\n  //         puck.position.x += ((strikerBotRadius + puckRadius * 1.3) - distPuckStrTwo);\n  //       // }\n  //     }\n  //   } else if (puckStats.puckDirX > 0) {\n  //     if (Math.abs(strikerStats.strikerTwoDirX) > Math.abs(puckStats.puckDirX)) {\n  //       // while (distPuckStrTwo < (strikerBotRadius + puckRadius)) {\n  //         puck.position.x -= ((strikerBotRadius + puckRadius * 1.3) - distPuckStrTwo);\n  //       // }\n  //     }\n  //   }\n  //\n  //   if (puckStats.puckDirY < 0) {\n  //     if (Math.abs(strikerStats.strikerTwoDirY) > Math.abs(puckStats.puckDirY)) {\n  //       // while (distPuckStrTwo < (strikerBotRadius + puckRadius)) {\n  //         puck.position.y += ((strikerBotRadius + puckRadius * 1.3) - distPuckStrTwo);\n  //       // }\n  //     }\n  //   } else if (puckStats.puckDirY > 0) {\n  //     if (Math.abs(strikerStats.strikerTwoDirY) > Math.abs(puckStats.puckDirY)) {\n  //       // while (distPuckStrTwo < (strikerBotRadius + puckRadius)) {\n  //         puck.position.y -= ((strikerBotRadius + puckRadius * 1.3) - distPuckStrTwo);\n  //       // }\n  //     }\n  //   }\n  //\n  //     puckStats.puckDirX = -puckStats.puckDirX - (strikerStats.strikerTwoDirX * puckSpeedLev);\n  //     puckStats.puckDirY = -puckStats.puckDirY - (strikerStats.strikerTwoDirY * puckSpeedLev);\n  // }\n  //\n  // //////////////////////////////////////////////////////////////\n  // //////////////////////////////////////////////////////////////\n  // //////////////////////////////////////////////////////////////\n  //\n  // if (puckStats.puckDirY > puckStats.puckSpeed * 2) {\n  //   puckStats.puckDirY = puckStats.puckSpeed * 2;\n  // }\n  // else if (puckStats.puckDirY < -puckStats.puckSpeed * 2) {\n  //   puckStats.puckDirY = -puckStats.puckSpeed * 2;\n  // }\n\n\n\n  // checkCollision(puck, strikerOne, puckStats, strikerStats);\n  // checkCollision(puck, strikerTwo, puckStats, strikerStats);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////////////\nfunction resetPuck(player, puck, puckStats) {\n  puck.position.x = 0;\n  puck.position.y = 0;\n\n  if (player === 1) {\n    puckStats.puckDirX = -1;\n  } else {\n    puckStats.puckDirX = 1;\n  }\n\n  puckStats.puckDirY = 1;\n}\n///////////////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////////////\nfunction gameWonCheck(scorePlayer1, scorePlayer2, maxScore, puckStats) {\n  if (scorePlayer1 >= maxScore) {\n    puckStats.puckSpeed = 0;\n    document.getElementById(\"score-board\").innerHTML = \"Human Wins!\";\n    document.getElementById(\"winner\").innerHTML = \"Refresh to play again\";\n  } else if (scorePlayer2 >= maxScore) {\n    puckStats.puckSpeed = 0;\n    document.getElementById(\"score-board\").innerHTML = \"Robot Wins!\";\n    document.getElementById(\"winner\").innerHTML = \"Refresh to play again\";\n  }\n}\n///////////////////////////////////////////////////////////////////////////////////////\n\n\n// function rotate (x, y, sin, cos, reverse) {\n//   return {\n//     x: (reverse) ? (x * cos + y * sin) : (x * cos - y * sin),\n//     y: (reverse) ? (y * cos - x * sin) : (y * cos + x * sin)\n//   };\n// }\n//\n// function checkCollision (puck, striker, puckStats, strikerStats) {\n//   var puckVX = puckStats.puckDirX,\n//     puckVY = puckStats.puckDirY,\n//     strVX = strikerStats.strikerOneDirX,\n//     strVY = strikerStats.strikerOneDirY,\n//     puckMass = puckRadius,\n//     strMass = strikerBotRadius;\n//\n//   var dx = puck.position.x - striker.position.x,\n//     dy = puck.position.y - striker.position.y,\n//     dist = Math.sqrt(dx * dx + dy * dy);\n//\n//   if (dist < puckRadius + strikerBotRadius) {\n//     var angle = Math.atan2(dy, dx),\n//       sin = Math.sin(angle),\n//       cos = Math.cos(angle),\n//       // rotate the striker's position\n//       strPos = {x: 0, y: 0},\n//       // rotate the puck's position\n//       puckPos = rotate(dx, dy, sin, cos, true),\n//       // rotate the striker's velocity\n//       strVel = rotate(strVX, strVY, sin, cos, true),\n//       // rotate puck's velocity\n//       puckVel = rotate(puckVX, puckVY, sin, cos, true),\n//       // collision reaction\n//       vXTotal = strVel.x - puckVel.x;\n//       strVel.x = ((strMass - puckMass) * strVel.x + 2 * puckMass * puckVel.x) /\n//         (strMass + puckMass);\n//       puckVel.x = vXTotal + strVel.x;\n//       // update position to avoid objects sticking\n//       var absV = Math.abs(strVel.x) + Math.abs(puckVel.x),\n//         overlap = (puckRadius + strikerBotRadius) -\n//           Math.abs(strPos.x - puckPos.x);\n//       strPos.x += strVel.x / absV * overlap;\n//       puckPos.x += puckVel.x / absV * overlap;\n//\n//       // rotate positions back\n//       var strPosF = rotate(strPos.x, strPos.y, sin, cos, false);\n//       var puckPosF = rotate(puckPos.x, puckPos.y, sin, cos, false);\n//\n//       //Adjust puck position\n//       puck.position.x = striker.position.x + puckPos.x;\n//       puck.position.y = striker.position.y + puckPos.y;\n//       striker.position.x = striker.position.x + strPosF.x;\n//       striker.position.y = striker.position.y + strPosF.y;\n//\n//       //rotate velocities back\n//       var strVelF = rotate(strVel.x, strVel.y, sin, cos, false);\n//       var puckVelF = rotate(puckVel.x, puckVel.y, sin, cos, false);\n//       strVX = strVelF.x;\n//       strVY = strVelF.y;\n//       puckVX = puckVelF.x;\n//       puckVY - puckVelF.y;\n//     } else {\n//     puck.position.x += puckStats.puckDirX * puckStats.puckSpeed;\n//     puck.position.y += puckStats.puckDirY * puckStats.puckSpeed;\n//   }\n\n\n\n\n\n\n\n\n\n\n\n\n/////\n\n\n\n// WEBPACK FOOTER //\n// ./lib/puck_physics.js","\n\nlet difficulty = .2;\n\nexport function strikerPhysics(puck, strikerOne, strikerTwo, gameStats, strikerStats) {\n\n  strikerStats.strikerTwoDirY = (puck.position.y - strikerTwo.position.y) * difficulty;\n\n  if (Math.abs(strikerStats.strikerTwoDirY) <= strikerStats.strikerTwoSpeed) {\n    strikerTwo.position.y += strikerStats.strikerTwoDirY;\n  } else if (strikerStats.strikerTwoDirY > strikerStats.strikerTwoSpeed) {\n    strikerTwo.position.y += strikerStats.strikerTwoSpeed;\n  } else if (strikerStats.strikerTwoDirY < -strikerStats.strikerTwoSpeed) {\n    strikerTwo.position.y -= strikerStats.strikerTwoSpeed;\n  }\n\n  if (Key.isDown(Key.L)) {\n    if (strikerOne.position.y < gameStats.fieldHeight * 0.47) {\n      strikerStats.strikerOneDirY = strikerStats.strikerOneSpeed;\n    } else {\n      strikerStats.strikerOneDirY = 0;\n    }\n  } else if (Key.isDown(Key.R)) {\n    if (strikerOne.position.y > -gameStats.fieldHeight *0.47) {\n      strikerStats.strikerOneDirY = -strikerStats.strikerOneSpeed;\n    } else {\n      strikerStats.strikerOneDirY = 0;\n    }\n  } else {\n    strikerStats.strikerOneDirY = 0;\n  }\n\n\n  if (Key.isDown(Key.F)) {\n    if (strikerOne.position.x < -50) {\n      strikerStats.strikerOneDirX = strikerStats.strikerOneSpeed;\n    } else {\n      strikerStats.strikerOneDirX = 0;\n    }\n  } else if (Key.isDown(Key.B)) {\n    if (strikerOne.position.x > -307) {\n      strikerStats.strikerOneDirX = -strikerStats.strikerOneSpeed;\n    } else {\n      strikerStats.strikerOneDirX = 0;\n    }\n  } else {\n    strikerStats.strikerOneDirX = 0;\n  }\n\n  strikerOne.position.y += strikerStats.strikerOneDirY;\n  strikerOne.position.x += strikerStats.strikerOneDirX;\n\n  }\n\n\n\n// WEBPACK FOOTER //\n// ./lib/striker_physics.js"],"sourceRoot":""}